; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; http://docs.platformio.org/page/projectconf.html

[platformio]
description=ESP32 Command Station
default_envs = esp32

[env]
# common build flags and settings for all build targets
extra_scripts=utils/pio_http_headers.py
platform=espressif32
board=esp32dev
framework=espidf, arduino
lib_deps=
  ArduinoJson
  ESP8266_SSD1306
  LiquidCrystal_PCF8574
  Wire
  NeoPixelBus
lib_compat_mode=strict
build_flags =
  -g3
  -DESP32_WIFIMGR_SOCKETPARAMS_LOG_LEVEL=VERBOSE
  -DESP32_WIFIMGR_MDNS_LOOKUP_LOG_LEVEL=VERBOSE
  -DARDUINOJSON_ENABLE_STD_STRING=1
  -DARDUINOJSON_ENABLE_STD_STREAM=1
  -std=c++11
  -D_GLIBCXX_USE_C99
  -DLOCKED_LOGGING
  -DOPENMRN_EXCLUDE_REBOOT_IMPL
  -DOPENMRN_EXCLUDE_FREE_HEAP_IMPL
  -DESP32CS_VERSION="\"1.4.0\""
  -DESP32CS_NUMERIC_VERSION=0x0140
monitor_speed=115200
board_build.partitions=ESP32CS-partitions.csv

[pcb_common]
# for the custom PCB use pre-defined configuration options:
# 1) Soft AP only (SSID:esp32cs, no password)
# 2) LMD18200 / L298 as defined on the PCB
# 3) LCC CAN enabled
# 4) Outputs and Sensors disabled as there are no free pins
# 5) RailCom enabled for OPS using UART2
build_flags =
  -DESP32CS_EXTERNAL_CONFIGURATION=true
  -DCONFIG_USE_SD=true
  -DENABLE_OUTPUTS=false
  -DENABLE_SENSORS=false
  -DSSID_NAME="\"esp32cs\""
  -DSSID_PASSWORD="\"\""
  -DWIFI_ENABLE_SOFT_AP_ONLY=true
  -DOPS_ENABLE_PIN=16
  -DOPS_THERMAL_PIN=0
  -DOPS_CURRENT_SENSE_ADC=ADC1_CHANNEL_0
  -DOPS_HBRIDGE_TYPE=LMD18200
  -DOPS_SIGNAL_PIN=17
  -DOPS_TRACK_PREAMBLE_BITS=16
  -DRAILCOM_BRAKE_ENABLE_PIN=32
  -DRAILCOM_ENABLE_PIN=27
  -DRAILCOM_SHORT_PIN=34
  -DRAILCOM_UART=2
  -DRAILCOM_UART_RX_PIN=33
  -DPROG_ENABLE_PIN=18
  -DPROG_CURRENT_SENSE_ADC=ADC1_CHANNEL_3
  -DPROG_HBRIDGE_TYPE=L298
  -DPROG_SIGNAL_PIN=19
  -DPROG_TRACK_PREAMBLE_BITS=22
  -DLCC_CAN_RX_PIN=4
  -DLCC_CAN_TX_PIN=5
  -DINFO_SCREEN_SDA_PIN=23
  -DINFO_SCREEN_SCL_PIN=21
  -DSTATUS_LED_DATA_PIN=22
  -DSTATUS_LED_ENABLED=true
  -DSTATUS_LED_COLOR_ORDER=RGB
  -DSTATUS_LED_TYPE=WS281X

[env:esp32]
# This is the default build environment and requires configuration via the Config.h and related files.

[env:pcb]
build_flags =
  ${env.build_flags}
  ${pcb_common.build_flags}

[env:pcb_oled_sh1106]
# build option for the custom PCB with an OLED display connected via I2C
# using the SH1106 chipset.
build_flags =
  ${env.build_flags}
  ${pcb_common.build_flags}
  -DINFO_SCREEN_OLED=true
  -DINFO_SCREEN_OLED_CHIPSET=SH1106
  -DINFO_SCREEN_OLED_I2C_ADDRESS=0x3C
  -DINFO_SCREEN_OLED_VERTICAL_FLIP=false

[env:pcb_oled_ssd1306]
# build option for the custom PCB with an OLED display connected via I2C
# using the SSD1306 chipset.
build_flags =
  ${env.build_flags}
  ${pcb_common.build_flags}
  -DINFO_SCREEN_OLED=true
  -DINFO_SCREEN_OLED_CHIPSET=SSD1306
  -DINFO_SCREEN_OLED_I2C_ADDRESS=0x3C
  -DINFO_SCREEN_OLED_VERTICAL_FLIP=false

[env:pcb_lcd_20x4]
# build option for the custom PCB with a 20x4 LCD display connected via I2C
build_flags =
  ${env.build_flags}
  ${pcb_common.build_flags}
  -DINFO_SCREEN_LCD=true
  -DINFO_SCREEN_LCD_I2C_ADDRESS=0x27
  -DINFO_SCREEN_LCD_LINES=4
  -DINFO_SCREEN_LCD_COLUMNS=20

[env:pcb_lcd_16x2]
# build option for the custom PCB with a 16x2 LCD display connected via I2C
build_flags =
  ${env.build_flags}
  ${pcb_common.build_flags}
  -DINFO_SCREEN_LCD=true
  -DINFO_SCREEN_LCD_I2C_ADDRESS=0x27
  -DINFO_SCREEN_LCD_LINES=2
  -DINFO_SCREEN_LCD_COLUMNS=16
